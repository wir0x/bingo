

import java.awt.Color;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Form.java
 *
 * Created on 29-mar-2013, 10:58:05
 */
/**
 *
 * @author GonzaloSV
 */
public class Form extends javax.swing.JFrame {

    /** Creates new form Form */
    public Form() {
        initComponents();
    }
    Lista l1 = new Lista();
    Vector v1 ;
    boolean vrf = true;
    int press = 0;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        btnCargar = new javax.swing.JButton();
        labelNum = new javax.swing.JLabel();
        txt1 = new javax.swing.JTextField();
        btnNuevo = new javax.swing.JButton();
        btnIniciar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(330, 130, 0, 0));
        setMinimumSize(new java.awt.Dimension(750, 570));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        areaTexto.setBackground(new java.awt.Color(37, 37, 37));
        areaTexto.setColumns(20);
        areaTexto.setForeground(new java.awt.Color(0, 255, 255));
        areaTexto.setRows(5);
        areaTexto.setAutoscrolls(false);
        jScrollPane1.setViewportView(areaTexto);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 720, 279));

        btnCargar.setFont(new java.awt.Font("Niagara Solid", 0, 36)); // NOI18N
        btnCargar.setForeground(new java.awt.Color(255, 0, 51));
        btnCargar.setText("Cargar Tablas"); // NOI18N
        btnCargar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(255, 255, 51), new java.awt.Color(204, 0, 204), new java.awt.Color(204, 204, 0), new java.awt.Color(51, 255, 51)));
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 150, 70));

        labelNum.setFont(new java.awt.Font("MV Boli", 0, 60)); // NOI18N
        labelNum.setText("...");
        labelNum.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        labelNum.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        getContentPane().add(labelNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 90, 90));

        txt1.setFont(new java.awt.Font("Niagara Solid", 0, 48)); // NOI18N
        txt1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        getContentPane().add(txt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 160, 90, 70));

        btnNuevo.setFont(new java.awt.Font("MS Gothic", 0, 48)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(255, 51, 0));
        btnNuevo.setText("New");
        btnNuevo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(255, 0, 51), new java.awt.Color(0, 51, 255), new java.awt.Color(255, 255, 0)));
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        getContentPane().add(btnNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 150, 70));

        btnIniciar.setFont(new java.awt.Font("MS Gothic", 0, 48)); // NOI18N
        btnIniciar.setForeground(new java.awt.Color(0, 102, 204));
        btnIniciar.setText("GO");
        btnIniciar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 204, 204), new java.awt.Color(51, 204, 0), new java.awt.Color(204, 0, 204), new java.awt.Color(255, 204, 0)));
        btnIniciar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });
        getContentPane().add(btnIniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, 140, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Bingo.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, -20, 480, 170));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarTablas() {
        JTable carton;  // Se crea una instancia de la clase JTable
        JLabel titleC;  // Se crea una instancia de la clase JLabel
        int xt = 1;     // Esta variables definiran la ubicacion de las tablas en el eje "x"
        int xl = 3;     // Esta variable definira la ubicaion de la JLabel en el eje "x"
        int y = 0;      // Esta variable definiar tanto para el JTable como para JLabel la ubicaion en el eje "y"
        Matriz mx = new Matriz();
        for (int k = 1; k < l1.getCant(); k++) {
            carton = new JTable(2, 5);  //Dimensiona fila y columna del carton
            titleC = new JLabel("Carton: " + k); // Ingresa el nombre que tendran los cartones con su respectivo numero
            carton.setName("Tabla " + k);        // Se le asigna un nombre a cada tabla
            titleC.setForeground(Color.orange);
            carton.disable();// Deshabilita el editado manual del JTable (carton)
            if (xt == 71 && xl == 73) { // aqui pregunta para que pueda bajar y se cree otras tablas y no se siga en una linea continua
                xt = 1;
                xl = 3;
                y = y + 60;
            }

            carton.setBounds(xt * 10, y + 30, 120, 32); // Ubicacion y tamaño de la JTable (Carton)
            titleC.setBounds(xl * 10, y, 120, 42);      // Ubicacion y tamaño del Jlabel   (titleC)
            mx = l1.getElem(k); // Se le asigna a "mx" lo que hay en la Lista sub "k"
            for (int i = 0; i < mx.getFil(); i++) {
                for (int j = 0; j < mx.getCol(); j++) {
                    carton.setValueAt(mx.getElem(i, j), i, j);// aqui se empieza a rellenar con los datos de la matriz al carton
                }
            }
            carton.setDefaultRenderer(Object.class, new renderizar()); // Llama a una de las propiedades de las tablas y las aplica en el carton para el pintado de datos
            areaTexto.append("\n");//Hace un salto de linea
            areaTexto.add(carton);  // agrega el JTable (carton)
            areaTexto.add(titleC);  // agrega el JLabel (titleC)
            xt = xt + 14;
            xl = xl + 14;
        }
    }
    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        if (vrf) {
            int n = Integer.parseInt(txt1.getText()); // Esta variable genera la cantidad de cartones que se quiere crear
            Matriz mz;
            for (int i = 0; i < n; i++) { // Empieza a cargase la matriz con datos randomicos
                mz = new Matriz();
                mz.cargarBingo();
                l1.insertarUltimo(mz);
            }
            generarTablas(); // Llama al metodo generar tablas
            v1 = new Vector();
            v1.cargarTombola();
            //mostrarTombola();
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    public void BuscarGanador() {
        if (vrf) {
            Matriz mg;
            for (int i = 1; i <l1.getCant(); i++) {
                int c=0;
                mg = new Matriz();
                mg = l1.getElem(i);
                for (int j = 0; j < press; j++) {
                    if (mg.buscarNumero(v1.getElem(j))) {
                        c++;
                    }
                }
                if (c == 10) {
                    JOptionPane.showMessageDialog(null, "El ganador es el jugador Nro. "+ i,"BINGO",1 );
                    vrf=false;
                }
            }
        }
    }

    public class renderizar extends DefaultTableCellRenderer {
        @Override

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {
            this.setOpaque(true);
            this.setBackground(Color.darkGray);
            this.setForeground(Color.CYAN);

            for (int i = 0; i < press; i++) {
                if (value instanceof Integer) {
                    Integer aux = (Integer) value;
                    if (aux.intValue() == v1.getElem(i)) {
                        this.setOpaque(true);
                        this.setBackground(Color.blue);
                        this.setForeground(Color.white);
                    }
                }
            }
            return super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);
        }
    }

//    public void mostrarTombola() {
//        txtTom.setText(" ");
//        for (int i = 0; i < 99; i++) {
//            txtTom.setText(txtTom.getText() + "-" + String.valueOf(v1.getElem(i)));
//        }
//    }

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        if (vrf) {
            labelNum.setText(String.valueOf(v1.getElem(press)));
            areaTexto.setText("");
            areaTexto.removeAll();
            press++;
            generarTablas();
            BuscarGanador();
        }
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        areaTexto.removeAll();
        areaTexto.setText("");
        l1.Limpiar();
        press=0;    vrf=true;   labelNum.setText("...");
    }//GEN-LAST:event_btnNuevoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Form().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelNum;
    private javax.swing.JTextField txt1;
    // End of variables declaration//GEN-END:variables
}
